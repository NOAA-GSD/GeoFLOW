name: CI

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

#    - name: Setup tmate session
#      # This will suspend the build process and provide an SSH
#      # commend to ssh into the worker node executing the script
#      uses: mxschmitt/action-tmate@v3
      
    - name: Install Required Apps
      # Many components require a newer compiler C++17 or even C++20
      # so we must install a newer compiler.  DOxygen is used for 
      # documentation and GraphViz is needed by DOxygen for source
      # graph creation (but not required).
      shell: bash
      run:  |
            sudo apt update
            sudo apt install gcc-10 g++-10 gfortran-10
            sudo apt install openmpi-bin libopenmpi-dev
            sudo apt install libboost-all-dev
            sudo apt install doxygen
            sudo apt install graphviz

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE
      env:
        CC:   mpicc
        CXX:  mpicxx
        FC:   mpif90

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE --parallel 2

    - name: Install
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --target install

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE
